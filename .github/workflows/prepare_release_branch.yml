name: Prepare release branch

on:
  workflow_dispatch:
    inputs:
      version_part:
        description: The part of the version to work on after the release (Patch, Minor or Major)
        required: true
        type: choice
        options:
          - Patch
          - Minor
          - Major
        default: 'Minor'

jobs:
  prepare-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Validate inputs
        run: |
          echo "INPUT_VERSION_PART: ${{ github.event.inputs.version_part }}"
          python -c "if '${{ github.event.inputs.version_part }}' not in ['Patch', 'Minor', 'Major']:   raise ValueError(\"'${{ github.event.inputs.version_part }}' must be one of ['Patch', 'Minor', 'Major'])\")"

      - name: Save new version
        id: save_new_version
        run: |
          mvn validate -D 'bump${{ github.event.inputs.version_part }}' -DgenerateBackupPoms=false
          mvn versions:set -DremoveSnapshot -DgenerateBackupPoms=false
          echo "::set-output name=new_version::$(mvn -B help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Commit new release version 
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "Bump version for release 1.16-${{ steps.save_new_version.outputs.new_version }}"
          
      - name: Update the CHANGELOG according to 'Keep a Changelog' guidelines
        uses: thomaseizinger/keep-a-changelog-new-release@v1
        with:
          version: ${{ steps.save_new_version.outputs.new_version }}

      - name: Create a new release branch
        run: |
          git commit -am "Bump CHANGELOG for release 1.16-${{ steps.save_new_version.outputs.new_version }}"
          git checkout -b release/1.16-${{ steps.save_new_version.outputs.new_version }}
          git push -u origin release/1.16-${{ steps.save_new_version.outputs.new_version }}

      - name: Create Release # https://github.com/actions/create-release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: 1.16-v${{ steps.set_package_version.outputs.new_version }}
          release_name: Release 1.16-v${{ steps.set_package_version.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Rollback Release in case of run failure
        if: failure() && steps.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          # Using a known release ID
          release_id: ${{ steps.create_release.outputs.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump development version
        run: |
          git checkout -b bump-version-after-1.16-${{ steps.save_new_version.outputs.new_version }}
          git push -u origin bump-version-after-1.16-${{ steps.save_new_version.outputs.new_version }}

      - name: Open a PR to bump development version to main
        id: open_pr
        uses: vsoch/pull-request-action@1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_BRANCH: main
          PULL_REQUEST_FROM_BRANCH: bump-version-after-1.16-${{ steps.save_new_version.outputs.new_version }}
          PULL_REQUEST_TITLE: "Bump development version after release of 1.16-${{ steps.save_new_version.outputs.new_version }}"
          PULL_REQUEST_BODY: "Bump SNAPSHOT version and CHANGELOG for subsequent development."